using Microsoft.AspNetCore.Mvc;
using TubeMiniApp.API.DTOs;
using TubeMiniApp.API.Services;

namespace TubeMiniApp.API.Controllers;

[ApiController]
[Route("api/[controller]")]
public class TelegramController : ControllerBase
{
    private readonly ILogger<TelegramController> _logger;
    private readonly ITelegramNotificationService _telegramService;

    public TelegramController(
        ILogger<TelegramController> logger,
        ITelegramNotificationService telegramService)
    {
        _logger = logger;
        _telegramService = telegramService;
    }

    [HttpPost("webhook")]
    public async Task<IActionResult> HandleWebhook([FromBody] TelegramUpdateDto update)
    {
        try
        {
            _logger.LogInformation("–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram: {UpdateType}", 
                update.Message?.Text ?? "Non-text update");

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if (update.Message?.Text != null)
            {
                await HandleTextMessage(update);
            }

            return Ok();
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook –æ—Ç Telegram");
            return StatusCode(500);
        }
    }

    private async Task HandleTextMessage(TelegramUpdateDto update)
    {
        var message = update.Message;
        var chatId = message.Chat.Id;
        var text = message.Text.Trim();

        _logger.LogInformation("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {UserId}: {Text}", 
            message.From.Id, text);

        switch (text.ToLower())
        {
            case "/start":
                await HandleStartCommand(chatId, message.From);
                break;
            
            case "/help":
                await HandleHelpCommand(chatId);
                break;
            
            default:
                await HandleUnknownCommand(chatId);
                break;
        }
    }

    private async Task HandleStartCommand(long chatId, TelegramUserDto user)
    {
        var welcomeMessage = $"""
            üõí –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–ú–ö!
            
            üëã –ü—Ä–∏–≤–µ—Ç, {user.FirstName}!
            
            –≠—Ç–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞. 
            –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
            
            üîç –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
            üì¶ –î–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É  
            üìã –û—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã
            üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤
            
            –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω" –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.
            """;

        await _telegramService.SendMessageAsync(chatId, welcomeMessage);
        
        _logger.LogInformation("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {UserId}", user.Id);
    }

    private async Task HandleHelpCommand(long chatId)
    {
        var helpMessage = """
            üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É –¢–ú–ö
            
            ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
            /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
            /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
            
            üõçÔ∏è –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:
            1. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            3. –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ –∫–æ—Ä–∑–∏–Ω—É
            4. –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑
            
            üìû –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: @support_username
            üåê –°–∞–π—Ç: https://sa05.me
            """;

        await _telegramService.SendMessageAsync(chatId, helpMessage);
    }

    private async Task HandleUnknownCommand(long chatId)
    {
        var unknownMessage = """
            ‚ùì –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
            
            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
            /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
            /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
            
            –ò–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º! üõí
            """;

        await _telegramService.SendMessageAsync(chatId, unknownMessage);
    }
}